class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

class Solution:
    def isSameTree(self, p: TreeNode, q: TreeNode) -> bool:
        # Base cases
        if not p and not q:
            return True
        if not p or not q:
            return False
        
        # Check current node value and recursively check left and right subtrees
        return (p.val == q.val) and self.isSameTree(p.left, q.left) and self.isSameTree(p.right, q.right)

tree1 = TreeNode(1)
tree1.left = TreeNode(2)
tree1.right = TreeNode(3)

tree2 = TreeNode(1)
tree2.left = TreeNode(2)
tree2.right = TreeNode(3)

sol = Solution()
print(sol.isSameTree(tree1, tree2))  

tree3 = TreeNode(1)
tree3.left = TreeNode(2)
tree3.right = TreeNode(1)

tree4 = TreeNode(1)
tree4.left = TreeNode(1)
tree4.right = TreeNode(2)

print(sol.isSameTree(tree3, tree4))  
