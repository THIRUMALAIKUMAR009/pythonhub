class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

class Solution:
    def __init__(self):
        self.max_sum = float('-inf') 
    
    def maxPathSum(self, root: TreeNode) -> int:
        def helper(node: TreeNode) -> int:
            if not node:
                return 0
            left_sum = max(helper(node.left), 0)  
            right_sum = max(helper(node.right), 0) 
            current_path_sum = node.val + left_sum + right_sum
            self.max_sum = max(self.max_sum, current_path_sum)
            return node.val + max(left_sum, right_sum)
        
        helper(root)
        return self.max_sum
root = TreeNode(10)
root.left = TreeNode(2)
root.right = TreeNode(10)
root.left.left = TreeNode(20)
root.left.right = TreeNode(1)
root.right.right = TreeNode(-25)
root.right.right.left = TreeNode(3)
root.right.right.right = TreeNode(4)

sol = Solution()
print(sol.maxPathSum(root)) 
