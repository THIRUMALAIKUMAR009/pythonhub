from collections import Counter, defaultdict
def minWindow(s, t):
    if not s or not t:
        return ""
    t_count = Counter(t)
    s_count = defaultdict(int)
    required = len(t_count)
    formed = 0
    left, right = 0, 0
    min_len = float('inf')
    min_window = ""
    while right < len(s):
        character = s[right]
        s_count[character] += 1
        if character in t_count and s_count[character] == t_count[character]:
            formed += 1
        while left <= right and formed == required:
            character = s[left]
            if right - left + 1 < min_len:
                min_len = right - left + 1
                min_window = s[left:right + 1]
            s_count[character] -= 1
            if character in t_count and s_count[character] < t_count[character]:
                formed -= 1
            left += 1
        right += 1
    return min_window
s = "ADOBECODEBANC"
t = "ABC"
print(minWindow(s, t)) 
