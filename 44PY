class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
def rotateRight(head, k):
    if not head or k == 0:
        return head
    length = 1
    old_tail = head
    while old_tail.next:
        old_tail = old_tail.next
        length += 1
    k = k % length
    if k == 0:
        return head
    new_tail = head
    for _ in range(length - k - 1):
        new_tail = new_tail.next
    new_head = new_tail.next
    new_tail.next = None
    old_tail.next = head
    return new_head
def printList(head):
    while head:
        print(head.val, end=" -> ")
        head = head.next
    print("None")
head = ListNode(1, ListNode(2, ListNode(3, ListNode(4, ListNode(5)))))
print("Original list:")
printList(head)
rotated_head = rotateRight(head, 2)
print("Rotated list:")
printList(rotated_head)
