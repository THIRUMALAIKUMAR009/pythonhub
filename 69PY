from collections import deque
class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right
def maxDepth(root: TreeNode) -> int:
    if root is None:
        return 0
    max_depth = 0
    stack = [(root, 1)] 
    while stack:
        node, depth = stack.pop()
        if node:
            max_depth = max(max_depth, depth)
            if node.left:
                stack.append((node.left, depth + 1))
            if node.right:
                stack.append((node.right, depth + 1))
    
    return max_depth
root = TreeNode(1)
root.left = TreeNode(2)
root.right = TreeNode(3)
root.left.left = TreeNode(4)
print(maxDepth(root)) 
