class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
def isPalindrome(head):
    if not head or not head.next:
        return True
    def reverseLinkedList(head):
        prev = None
        while head:
            next_node = head.next
            head.next = prev
            prev = head
            head = next_node
        return prev
    slow = fast = head
    while fast and fast.next:
        slow = slow.next
        fast = fast.next.next
    second_half = reverseLinkedList(slow)
    first_half = head
    while second_half:
        if first_half.val != second_half.val:
            return False
        first_half = first_half.next
        second_half = second_half.next
    return True
def printList(head):
    while head:
        print(head.val, end=" -> ")
        head = head.next
    print("None")
def createLinkedList(values):
    head = ListNode(values[0])
    current = head
    for value in values[1:]:
        current.next = ListNode(value)
        current = current.next
    return head
head = createLinkedList([1, 2, 2, 1])
print("Original list:")
printList(head)
is_palindrome = isPalindrome(head)
print("Is palindrome:", is_palindrome)
