import random
def partition(nums, left, right, pivot_index):
    pivot_value = nums[pivot_index]
    nums[pivot_index], nums[right] = nums[right], nums[pivot_index]
    store_index = left
    for i in range(left, right):
        if nums[i] < pivot_value:
            nums[store_index], nums[i] = nums[i], nums[store_index]
            store_index += 1
    nums[right], nums[store_index] = nums[store_index], nums[right]
    return store_index
def quickselect(nums, left, right, k_smallest):
    """
    This function returns the k-th smallest element of list within left..right.
    """
    if left == right: 
        return nums[left]
    pivot_index = random.randint(left, right)
    pivot_index = partition(nums, left, right, pivot_index)
    if k_smallest == pivot_index:
        return nums[k_smallest]
    elif k_smallest < pivot_index:
        return quickselect(nums, left, pivot_index - 1, k_smallest)
    else:
        return quickselect(nums, pivot_index + 1, right, k_smallest)
def findKthLargest(nums, k):
    return quickselect(nums, 0, len(nums) - 1, len(nums) - k)
nums = [3,2,1,5,6,4]
k = 2
print(f"The {k}th largest element is {findKthLargest(nums, k)}")
nums = [3,2,3,1,2,4,5,5,6]
k = 4
print(f"The {k}th largest element is {findKthLargest(nums, k)}")
